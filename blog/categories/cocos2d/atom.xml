<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Cocos2d | Imrazor's Blog]]></title>
  <link href="http://imrazor.github.io/blog/categories/cocos2d/atom.xml" rel="self"/>
  <link href="http://imrazor.github.io/"/>
  <updated>2015-03-06T22:41:27+08:00</updated>
  <id>http://imrazor.github.io/</id>
  <author>
    <name><![CDATA[imrazor]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Cocos2d中的box2d]]></title>
    <link href="http://imrazor.github.io/blog/2014/05/07/box2d-of-cocos2d/"/>
    <updated>2014-05-07T07:49:49+08:00</updated>
    <id>http://imrazor.github.io/blog/2014/05/07/box2d-of-cocos2d</id>
    <content type="html"><![CDATA[<p>一、准备工作<br />
引入box2d包，在需要使用box2d的文件中加入box2d的头文件；由于box2d是c++编写的，所以要把引入box2d的所有文件后缀名都改为.mm</p>

<p>二、box2d中的一些重要参数<br />
1、gravity，重力加速度，同现实世界中的g，向量<br />
2、shape，形状，形状是有大小的<br />
3、density，密度<br />
4、friction，摩擦力<br />
5、restitution，恢复，此参数用于碰撞，如果两个物体有不同的restitution，box2d总是选择比较大的restitution进行计算<br />
6、meter，距离单位，灵活定义你的meter，当对象为0.1至10meters的时候，box2d可以很好的处理它们，</p>

<p>三、box2d之hello world<br />
让我们先创建一个box2d项目。创建好之后运行，每当我们点击屏幕时，会落下一个小方块：</p>

<p><img src="/images/blog/1343575297_7773.png" title="helloworld" alt="Alt text" /></p>

<!--more-->


<p>我们来详细看下生成的代码:
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">&amp;</span><span class="n">ndash</span><span class="p">;(</span><span class="kt">id</span><span class="p">)</span> <span class="n">init</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="c1">// always call &quot;super&quot; init</span>
</span><span class='line'><span class="c1">// Apple recommends to re-assign &quot;self&quot; with the &quot;super&quot; return value</span>
</span><span class='line'><span class="k">if</span><span class="p">(</span> <span class="p">(</span><span class="n">self</span><span class="o">=</span><span class="p">[</span><span class="n">super</span> <span class="n">init</span><span class="p">]))</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// enable touches</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">isTouchEnabled</span> <span class="o">=</span> <span class="n">YES</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// enable accelerometer</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">isAccelerometerEnabled</span> <span class="o">=</span> <span class="n">YES</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CGSize</span> <span class="n">screenSize</span> <span class="o">=</span> <span class="p">[</span><span class="n">CCDirector</span> <span class="n">sharedDirector</span><span class="p">].</span><span class="n">winSize</span><span class="p">;</span>
</span><span class='line'>    <span class="n">CCLOG</span><span class="p">(</span><span class="s">@&quot;Screen width %0.2f screen height %0.2f&quot;</span><span class="p">,</span><span class="n">screenSize</span><span class="p">.</span><span class="n">width</span><span class="p">,</span><span class="n">screenSize</span><span class="p">.</span><span class="n">height</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Define the gravity vector.</span>
</span><span class='line'>    <span class="n">b2Vec2</span> <span class="n">gravity</span><span class="p">;</span>
</span><span class='line'>    <span class="n">gravity</span><span class="p">.</span><span class="n">Set</span><span class="p">(</span><span class="mf">0.0f</span><span class="p">,</span> <span class="o">-</span><span class="mf">10.0f</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Do we want to let bodies sleep?</span>
</span><span class='line'>    <span class="c1">// This will speed up the physics simulation</span>
</span><span class='line'>    <span class="n">bool</span> <span class="n">doSleep</span> <span class="o">=</span> <span class="n">true</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Construct a world object, which will hold and simulate the rigid bodies.</span>
</span><span class='line'>    <span class="n">world</span> <span class="o">=</span> <span class="n">new</span> <span class="n">b2World</span><span class="p">(</span><span class="n">gravity</span><span class="p">,</span> <span class="n">doSleep</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">world</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">SetContinuousPhysics</span><span class="p">(</span><span class="n">true</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Debug Draw functions</span>
</span><span class='line'>    <span class="n">m_debugDraw</span> <span class="o">=</span> <span class="n">new</span> <span class="n">GLESDebugDraw</span><span class="p">(</span> <span class="n">PTM_RATIO</span> <span class="p">);</span>
</span><span class='line'>    <span class="n">world</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">SetDebugDraw</span><span class="p">(</span><span class="n">m_debugDraw</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">uint32</span> <span class="n">flags</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="n">flags</span> <span class="o">+=</span> <span class="n">b2DebugDraw</span><span class="o">::</span><span class="n">e_shapeBit</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">//      flags += b2DebugDraw::e_jointBit;</span>
</span><span class='line'><span class="c1">//      flags += b2DebugDraw::e_aabbBit;</span>
</span><span class='line'><span class="c1">//      flags += b2DebugDraw::e_pairBit;</span>
</span><span class='line'><span class="c1">//      flags += b2DebugDraw::e_centerOfMassBit;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>    <span class="n">m_debugDraw</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">SetFlags</span><span class="p">(</span><span class="n">flags</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Define the ground body.</span>
</span><span class='line'>    <span class="n">b2BodyDef</span> <span class="n">groundBodyDef</span><span class="p">;</span>
</span><span class='line'>    <span class="n">groundBodyDef</span><span class="p">.</span><span class="n">position</span><span class="p">.</span><span class="n">Set</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span> <span class="c1">// bottom-left corner</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Call the body factory which allocates memory for the ground body</span>
</span><span class='line'>    <span class="c1">// from a pool and creates the ground box shape (also from a pool).</span>
</span><span class='line'>    <span class="c1">// The body is also added to the world.</span>
</span><span class='line'>    <span class="n">b2Body</span><span class="o">*</span> <span class="n">groundBody</span> <span class="o">=</span> <span class="n">world</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">CreateBody</span><span class="p">(</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">groundBodyDef</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Define the ground box shape.</span>
</span><span class='line'>    <span class="n">b2PolygonShape</span> <span class="n">groundBox</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// bottom</span>
</span><span class='line'>    <span class="n">groundBox</span><span class="p">.</span><span class="n">SetAsEdge</span><span class="p">(</span><span class="n">b2Vec2</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span> <span class="n">b2Vec2</span><span class="p">(</span><span class="n">screenSize</span><span class="p">.</span><span class="n">width</span><span class="o">/</span><span class="n">PTM_RATIO</span><span class="p">,</span><span class="mi">0</span><span class="p">));</span>
</span><span class='line'>    <span class="n">groundBody</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">CreateFixture</span><span class="p">(</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">groundBox</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// top</span>
</span><span class='line'>    <span class="n">groundBox</span><span class="p">.</span><span class="n">SetAsEdge</span><span class="p">(</span><span class="n">b2Vec2</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="n">screenSize</span><span class="p">.</span><span class="n">height</span><span class="o">/</span><span class="n">PTM_RATIO</span><span class="p">),</span> <span class="n">b2Vec2</span><span class="p">(</span><span class="n">screenSize</span><span class="p">.</span><span class="n">width</span><span class="o">/</span><span class="n">PTM_RATIO</span><span class="p">,</span><span class="n">screenSize</span><span class="p">.</span><span class="n">height</span><span class="o">/</span><span class="n">PTM_RATIO</span><span class="p">));</span>
</span><span class='line'>    <span class="n">groundBody</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">CreateFixture</span><span class="p">(</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">groundBox</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// left</span>
</span><span class='line'>    <span class="n">groundBox</span><span class="p">.</span><span class="n">SetAsEdge</span><span class="p">(</span><span class="n">b2Vec2</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="n">screenSize</span><span class="p">.</span><span class="n">height</span><span class="o">/</span><span class="n">PTM_RATIO</span><span class="p">),</span> <span class="n">b2Vec2</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">));</span>
</span><span class='line'>    <span class="n">groundBody</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">CreateFixture</span><span class="p">(</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">groundBox</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// right</span>
</span><span class='line'>    <span class="n">groundBox</span><span class="p">.</span><span class="n">SetAsEdge</span><span class="p">(</span><span class="n">b2Vec2</span><span class="p">(</span><span class="n">screenSize</span><span class="p">.</span><span class="n">width</span><span class="o">/</span><span class="n">PTM_RATIO</span><span class="p">,</span><span class="n">screenSize</span><span class="p">.</span><span class="n">height</span><span class="o">/</span><span class="n">PTM_RATIO</span><span class="p">),</span> <span class="n">b2Vec2</span><span class="p">(</span><span class="n">screenSize</span><span class="p">.</span><span class="n">width</span><span class="o">/</span><span class="n">PTM_RATIO</span><span class="p">,</span><span class="mi">0</span><span class="p">));</span>
</span><span class='line'>    <span class="n">groundBody</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">CreateFixture</span><span class="p">(</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">groundBox</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//Set up sprite</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CCSpriteBatchNode</span> <span class="o">*</span><span class="n">batch</span> <span class="o">=</span> <span class="p">[</span><span class="n">CCSpriteBatchNode</span> <span class="nl">batchNodeWithFile:</span><span class="s">@&quot;blocks.png&quot;</span> <span class="nl">capacity:</span><span class="mi">150</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span> <span class="nl">addChild:</span><span class="n">batch</span> <span class="nl">z:</span><span class="mi">0</span> <span class="nl">tag:</span><span class="n">kTagBatchNode</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span> <span class="nl">addNewSpriteWithCoords:</span><span class="n">ccp</span><span class="p">(</span><span class="n">screenSize</span><span class="p">.</span><span class="n">width</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span> <span class="n">screenSize</span><span class="p">.</span><span class="n">height</span><span class="o">/</span><span class="mi">2</span><span class="p">)];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CCLabelTTF</span> <span class="o">*</span><span class="n">label</span> <span class="o">=</span> <span class="p">[</span><span class="n">CCLabelTTF</span> <span class="nl">labelWithString:</span><span class="s">@&quot;Tap screen&quot;</span> <span class="nl">fontName:</span><span class="s">@&quot;Marker Felt&quot;</span> <span class="nl">fontSize:</span><span class="mi">32</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span> <span class="nl">addChild:</span><span class="n">label</span> <span class="nl">z:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">label</span> <span class="nl">setColor:</span><span class="n">ccc3</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">255</span><span class="p">)];</span>
</span><span class='line'>    <span class="n">label</span><span class="p">.</span><span class="n">position</span> <span class="o">=</span> <span class="n">ccp</span><span class="p">(</span> <span class="n">screenSize</span><span class="p">.</span><span class="n">width</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span> <span class="n">screenSize</span><span class="p">.</span><span class="n">height</span><span class="o">-</span><span class="mi">50</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span> <span class="nl">schedule:</span> <span class="k">@selector</span><span class="p">(</span><span class="nl">tick:</span><span class="p">)];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">return</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>在init方法中，首先创建了重力加速度，加速度是一个向量，-10是因为加速度朝向y轴负方向。之后创建world以及word的四个边缘，防止物体跑出屏幕。再然后是创建精和一个label，然后schedule tick方法</p>

<p>创建body的步骤：<br />
<img src="/images/blog/1343576373_9748.jpg" title="body" alt="Alt text" /></p>

<p>创建fixture的步骤：<br />
<img src="/images/blog/1343577197_1013.jpg" title="fixture" alt="Alt text" /></p>

<p>下面，让我们来看看如何创建一个box2d世界中的物体：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">&amp;</span><span class="n">ndash</span><span class="p">;(</span><span class="kt">void</span><span class="p">)</span> <span class="nl">addNewSpriteWithCoords:</span><span class="p">(</span><span class="n">CGPoint</span><span class="p">)</span><span class="n">p</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">CCLOG</span><span class="p">(</span><span class="s">@&quot;Add sprite %0.2f x %02.f&quot;</span><span class="p">,</span><span class="n">p</span><span class="p">.</span><span class="n">x</span><span class="p">,</span><span class="n">p</span><span class="p">.</span><span class="n">y</span><span class="p">);</span>
</span><span class='line'><span class="n">CCSpriteBatchNode</span> <span class="o">*</span><span class="n">batch</span> <span class="o">=</span> <span class="p">(</span><span class="n">CCSpriteBatchNode</span><span class="o">*</span><span class="p">)</span> <span class="p">[</span><span class="n">self</span> <span class="nl">getChildByTag:</span><span class="n">kTagBatchNode</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//We have a 64x64 sprite sheet with 4 different 32x32 images.  The following code is</span>
</span><span class='line'><span class="c1">//just randomly picking one of the images</span>
</span><span class='line'><span class="kt">int</span> <span class="n">idx</span> <span class="o">=</span> <span class="p">(</span><span class="n">CCRANDOM_0_1</span><span class="p">()</span> <span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="mf">.5</span> <span class="o">?</span> <span class="mi">0</span><span class="o">:</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'><span class="kt">int</span> <span class="n">idy</span> <span class="o">=</span> <span class="p">(</span><span class="n">CCRANDOM_0_1</span><span class="p">()</span> <span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="mf">.5</span> <span class="o">?</span> <span class="mi">0</span><span class="o">:</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'><span class="n">CCSprite</span> <span class="o">*</span><span class="n">sprite</span> <span class="o">=</span> <span class="p">[</span><span class="n">CCSprite</span> <span class="nl">spriteWithBatchNode:</span><span class="n">batch</span> <span class="nl">rect:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="mi">32</span> <span class="o">*</span> <span class="n">idx</span><span class="p">,</span><span class="mi">32</span> <span class="o">*</span> <span class="n">idy</span><span class="p">,</span><span class="mi">32</span><span class="p">,</span><span class="mi">32</span><span class="p">)];</span>
</span><span class='line'><span class="p">[</span><span class="n">batch</span> <span class="nl">addChild:</span><span class="n">sprite</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">sprite</span><span class="p">.</span><span class="n">position</span> <span class="o">=</span> <span class="n">ccp</span><span class="p">(</span> <span class="n">p</span><span class="p">.</span><span class="n">x</span><span class="p">,</span> <span class="n">p</span><span class="p">.</span><span class="n">y</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Define the dynamic body.</span>
</span><span class='line'><span class="c1">//Set up a 1m squared box in the physics world</span>
</span><span class='line'><span class="n">b2BodyDef</span> <span class="n">bodyDef</span><span class="p">;</span>
</span><span class='line'><span class="n">bodyDef</span><span class="p">.</span><span class="n">type</span> <span class="o">=</span> <span class="n">b2_dynamicBody</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">bodyDef</span><span class="p">.</span><span class="n">position</span><span class="p">.</span><span class="n">Set</span><span class="p">(</span><span class="n">p</span><span class="p">.</span><span class="n">x</span><span class="o">/</span><span class="n">PTM_RATIO</span><span class="p">,</span> <span class="n">p</span><span class="p">.</span><span class="n">y</span><span class="o">/</span><span class="n">PTM_RATIO</span><span class="p">);</span>
</span><span class='line'><span class="n">bodyDef</span><span class="p">.</span><span class="n">userData</span> <span class="o">=</span> <span class="n">sprite</span><span class="p">;</span>
</span><span class='line'><span class="n">b2Body</span> <span class="o">*</span><span class="n">body</span> <span class="o">=</span> <span class="n">world</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">CreateBody</span><span class="p">(</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">bodyDef</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Define another box shape for our dynamic body.</span>
</span><span class='line'><span class="n">b2PolygonShape</span> <span class="n">dynamicBox</span><span class="p">;</span>
</span><span class='line'><span class="n">dynamicBox</span><span class="p">.</span><span class="n">SetAsBox</span><span class="p">(</span><span class="mf">.5f</span><span class="p">,</span> <span class="mf">.5f</span><span class="p">);</span><span class="c1">//These are mid points for our 1m box</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Define the dynamic body fixture.</span>
</span><span class='line'><span class="n">b2FixtureDef</span> <span class="n">fixtureDef</span><span class="p">;</span>
</span><span class='line'><span class="n">fixtureDef</span><span class="p">.</span><span class="n">shape</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">dynamicBox</span><span class="p">;</span>
</span><span class='line'><span class="n">fixtureDef</span><span class="p">.</span><span class="n">density</span> <span class="o">=</span> <span class="mf">1.0f</span><span class="p">;</span>
</span><span class='line'><span class="n">fixtureDef</span><span class="p">.</span><span class="n">friction</span> <span class="o">=</span> <span class="mf">0.3f</span><span class="p">;</span>
</span><span class='line'><span class="n">body</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">CreateFixture</span><span class="p">(</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">fixtureDef</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>可以看到，代码中的步骤跟我们上面的步骤一样，唯一不同的就是多了一个userData，这个属性用来绑定精灵，否则你会看到精灵在你点击的地方不动，而一个粉色的方块掉了下去。fixture是相对于body的位置来的</p>

<p>接下来是tick方法:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">&amp;</span><span class="n">ndash</span><span class="p">;(</span><span class="kt">void</span><span class="p">)</span> <span class="nl">tick:</span> <span class="p">(</span><span class="n">ccTime</span><span class="p">)</span> <span class="n">dt</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="c1">//It is recommended that a fixed time step is used with Box2D for stability</span>
</span><span class='line'><span class="c1">//of the simulation, however, we are using a variable time step here.</span>
</span><span class='line'><span class="c1">//You need to make an informed choice, the following URL is useful</span>
</span><span class='line'><span class="c1">//http://gafferongames.com/game-physics/fix-your-timestep/</span>
</span><span class='line'>
</span><span class='line'><span class="n">int32</span> <span class="n">velocityIterations</span> <span class="o">=</span> <span class="mi">8</span><span class="p">;</span>
</span><span class='line'><span class="n">int32</span> <span class="n">positionIterations</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Instruct the world to perform a single step of simulation. It is</span>
</span><span class='line'><span class="c1">// generally best to keep the time step and iterations fixed.</span>
</span><span class='line'><span class="n">world</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">Step</span><span class="p">(</span><span class="n">dt</span><span class="p">,</span> <span class="n">velocityIterations</span><span class="p">,</span> <span class="n">positionIterations</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">//Iterate over the bodies in the physics world</span>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="n">b2Body</span><span class="o">*</span> <span class="n">b</span> <span class="o">=</span> <span class="n">world</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">GetBodyList</span><span class="p">();</span> <span class="n">b</span><span class="p">;</span> <span class="n">b</span> <span class="o">=</span> <span class="n">b</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">GetNext</span><span class="p">())</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">b</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">GetUserData</span><span class="p">()</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">//Synchronize the AtlasSprites position and rotation with the corresponding body</span>
</span><span class='line'>        <span class="n">CCSprite</span> <span class="o">*</span><span class="n">myActor</span> <span class="o">=</span> <span class="p">(</span><span class="n">CCSprite</span><span class="o">*</span><span class="p">)</span><span class="n">b</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">GetUserData</span><span class="p">();</span>
</span><span class='line'>        <span class="n">myActor</span><span class="p">.</span><span class="n">position</span> <span class="o">=</span> <span class="n">CGPointMake</span><span class="p">(</span> <span class="n">b</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">GetPosition</span><span class="p">().</span><span class="n">x</span> <span class="o">*</span> <span class="n">PTM_RATIO</span><span class="p">,</span> <span class="n">b</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">GetPosition</span><span class="p">().</span><span class="n">y</span> <span class="o">*</span> <span class="n">PTM_RATIO</span><span class="p">);</span>
</span><span class='line'>        <span class="n">myActor</span><span class="p">.</span><span class="n">rotation</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span> <span class="o">*</span> <span class="n">CC_RADIANS_TO_DEGREES</span><span class="p">(</span><span class="n">b</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">GetAngle</span><span class="p">());</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Step方法中，velocityIterations和positionIterations这两个参数越大，box2d就能进行更好的模拟，但是性能就会下降，这两个参数你应该自己把握以适合你的游戏。<br />
后面的for循环是为了让你的sprite与box2d中的对象同步，如果注释掉这段代码，你会发现粉方块掉下去了，你的sprite没掉下去。</p>

<p>四、box2d中拖动一个物体<br />
拖移物体需要用到box2d中的b2MouseJoint，首先我们在touchbegan方法中为我们点击到的物体创建b2MouseJoint对象，那么问题来了，我们如何获取点击到的物体呢？</p>

<p>box2d为我们提供了相关方法，即AABB（axis-aligned bounding box），原理为：首先，我们点击位置的四边加上了1-point的边，这样我们点击的位置变成了一个小方块；之后，以某个形状的物体做个长方形，看看我们点击的位置是否在这个长方形里面。如图：</p>

<p><img src="/images/blog/1343750595_4571.jpg" title="aabb" alt="Alt text" /></p>

<p>如果我们点击的位置在这个长方形里面，那么调用callback对象，这个callback对象是我们自己写的，之后可以通过TestPoint看看点击的位置是否的确在AABB找出的物体上，如果在，那么我们就获取到了点击的物体。上图可以发现其实我们并没有点到那个黑色的物体上，所以TestPoint会返回false。如果同时点到了多个物体，只返回第一个被发现的。</p>

<p>下面是touch began代码，我们可以看到b2MouseJoint如何被创建的：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nl">ccTouchesBegan:</span><span class="p">(</span><span class="n">NSSet</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span><span class="n">touches</span> <span class="nl">withEvent:</span><span class="p">(</span><span class="n">UIEvent</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span><span class="n">event</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">for</span><span class="p">(</span> <span class="n">UITouch</span> <span class="o">*</span><span class="n">touch</span> <span class="k">in</span> <span class="n">touches</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">CGPoint</span> <span class="n">location</span> <span class="o">=</span> <span class="p">[</span><span class="n">touch</span> <span class="nl">locationInView:</span><span class="n">touch</span><span class="p">.</span><span class="n">view</span><span class="p">];</span>
</span><span class='line'>    <span class="n">location</span> <span class="o">=</span> <span class="p">[[</span><span class="n">CCDirector</span> <span class="n">sharedDirector</span><span class="p">]</span> <span class="nl">convertToGL:</span><span class="n">location</span><span class="p">];</span>
</span><span class='line'>    <span class="n">location</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="nl">convertToNodeSpace:</span><span class="n">location</span><span class="p">];</span>
</span><span class='line'>    <span class="n">b2Vec2</span> <span class="n">b2Location</span> <span class="o">=</span> <span class="n">b2Vec2</span><span class="p">(</span><span class="n">location</span><span class="p">.</span><span class="n">x</span> <span class="o">/</span> <span class="n">PTM_RATIO</span><span class="p">,</span> <span class="n">location</span><span class="p">.</span><span class="n">y</span> <span class="o">/</span> <span class="n">PTM_RATIO</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">b2AABB</span> <span class="n">aabb</span><span class="p">;</span>
</span><span class='line'>    <span class="n">b2Vec2</span> <span class="n">delta</span> <span class="o">=</span> <span class="n">b2Vec2</span><span class="p">(</span><span class="mf">1.0</span> <span class="o">/</span> <span class="n">PTM_RATIO</span><span class="p">,</span> <span class="mf">1.0</span> <span class="o">/</span> <span class="n">PTM_RATIO</span><span class="p">);</span>
</span><span class='line'>    <span class="n">aabb</span><span class="p">.</span><span class="n">upperBound</span> <span class="o">=</span> <span class="n">b2Location</span> <span class="o">+</span> <span class="n">delta</span><span class="p">;</span>
</span><span class='line'>    <span class="n">aabb</span><span class="p">.</span><span class="n">lowerBound</span> <span class="o">=</span> <span class="n">b2Location</span> <span class="o">-</span> <span class="n">delta</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">SimpleQueryCallback</span> <span class="nf">callback</span><span class="p">(</span><span class="n">b2Location</span><span class="p">);</span>
</span><span class='line'>    <span class="n">world</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">QueryAABB</span><span class="p">(</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">callback</span><span class="p">,</span> <span class="n">aabb</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">callback</span><span class="p">.</span><span class="n">fixtureFound</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">b2Body</span> <span class="o">*</span><span class="n">body</span> <span class="o">=</span> <span class="n">callback</span><span class="p">.</span><span class="n">fixtureFound</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">GetBody</span><span class="p">();</span>
</span><span class='line'>        <span class="n">CCSprite</span> <span class="o">*</span><span class="n">sprite</span> <span class="o">=</span> <span class="p">(</span><span class="n">CCSprite</span> <span class="o">*</span><span class="p">)</span><span class="n">body</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">GetUserData</span><span class="p">();</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">sprite</span> <span class="o">==</span> <span class="nb">nil</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">b2MouseJointDef</span> <span class="n">mouseJointDef</span><span class="p">;</span>
</span><span class='line'>        <span class="n">mouseJointDef</span><span class="p">.</span><span class="n">bodyA</span> <span class="o">=</span> <span class="n">groundBody</span><span class="p">;</span>
</span><span class='line'>        <span class="n">mouseJointDef</span><span class="p">.</span><span class="n">bodyB</span> <span class="o">=</span> <span class="n">body</span><span class="p">;</span>
</span><span class='line'>        <span class="n">mouseJointDef</span><span class="p">.</span><span class="n">target</span> <span class="o">=</span> <span class="n">b2Location</span><span class="p">;</span>
</span><span class='line'>        <span class="n">mouseJointDef</span><span class="p">.</span><span class="n">maxForce</span> <span class="o">=</span> <span class="mi">1000</span> <span class="o">*</span> <span class="n">body</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">GetMass</span><span class="p">();</span>
</span><span class='line'>        <span class="n">mouseJointDef</span><span class="p">.</span><span class="n">collideConnected</span> <span class="o">=</span> <span class="n">true</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">mouseJoint</span> <span class="o">=</span> <span class="p">(</span><span class="n">b2MouseJoint</span> <span class="o">*</span><span class="p">)</span> <span class="n">world</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">CreateJoint</span><span class="p">(</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">mouseJointDef</span><span class="p">);</span>
</span><span class='line'>        <span class="n">body</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">SetAwake</span><span class="p">(</span><span class="n">true</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="p">[</span><span class="n">self</span> <span class="nl">addNewSpriteWithCoords:</span> <span class="n">location</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>其中bodyA一般会指定固定的body，bodyB指定你想移动的body，target为你要移动到哪里，maxForce越大，拖动速度越快，collideConnected为true时bodyA和bodyB会相撞。</p>

<p>SimpleQueryCallback是我们自己写的一个类：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">class</span> <span class="n">SimpleQueryCallback</span> <span class="o">:</span> <span class="n">public</span> <span class="n">b2QueryCallback</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="nl">public:</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">b2Vec2</span> <span class="n">pointToTest</span><span class="p">;</span>
</span><span class='line'><span class="n">b2Fixture</span> <span class="o">*</span> <span class="n">fixtureFound</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">SimpleQueryCallback</span><span class="p">(</span><span class="k">const</span> <span class="n">b2Vec2</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">point</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">pointToTest</span> <span class="o">=</span> <span class="n">point</span><span class="p">;</span>
</span><span class='line'>    <span class="n">fixtureFound</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">bool</span> <span class="n">ReportFixture</span><span class="p">(</span><span class="n">b2Fixture</span><span class="o">*</span> <span class="n">fixture</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">b2Body</span><span class="o">*</span> <span class="n">body</span> <span class="o">=</span> <span class="n">fixture</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">GetBody</span><span class="p">();</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">body</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">GetType</span><span class="p">()</span> <span class="o">==</span> <span class="n">b2_dynamicBody</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">fixture</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">TestPoint</span><span class="p">(</span><span class="n">pointToTest</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">fixtureFound</span> <span class="o">=</span> <span class="n">fixture</span><span class="p">;</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">false</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">true</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>然后是move和touch ended的代码，move中setTarget即会使物体移到新位置，别忘了在touch ended中销毁这个mouseJoint：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nl">ccTouchesMoved:</span><span class="p">(</span><span class="n">NSSet</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span><span class="n">touches</span> <span class="nl">withEvent:</span><span class="p">(</span><span class="n">UIEvent</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span><span class="n">event</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">for</span><span class="p">(</span> <span class="n">UITouch</span> <span class="o">*</span><span class="n">touch</span> <span class="k">in</span> <span class="n">touches</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">CGPoint</span> <span class="n">location</span> <span class="o">=</span> <span class="p">[</span><span class="n">touch</span> <span class="nl">locationInView:</span><span class="n">touch</span><span class="p">.</span><span class="n">view</span><span class="p">];</span>
</span><span class='line'>    <span class="n">location</span> <span class="o">=</span> <span class="p">[[</span><span class="n">CCDirector</span> <span class="n">sharedDirector</span><span class="p">]</span> <span class="nl">convertToGL:</span><span class="n">location</span><span class="p">];</span>
</span><span class='line'>    <span class="n">location</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="nl">convertToNodeSpace:</span><span class="n">location</span><span class="p">];</span>
</span><span class='line'>    <span class="n">b2Vec2</span> <span class="n">b2Location</span> <span class="o">=</span> <span class="n">b2Vec2</span><span class="p">(</span><span class="n">location</span><span class="p">.</span><span class="n">x</span> <span class="o">/</span> <span class="n">PTM_RATIO</span><span class="p">,</span> <span class="n">location</span><span class="p">.</span><span class="n">y</span> <span class="o">/</span> <span class="n">PTM_RATIO</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">mouseJoint</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">mouseJoint</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">SetTarget</span><span class="p">(</span><span class="n">b2Location</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">ul</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">li</span><span class="o">&gt;&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nl">ccTouchesEnded:</span><span class="p">(</span><span class="n">NSSet</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span><span class="n">touches</span> <span class="nl">withEvent:</span><span class="p">(</span><span class="n">UIEvent</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span><span class="n">event</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//Add a new body/atlas sprite at the touched location</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span> <span class="n">UITouch</span> <span class="o">*</span><span class="n">touch</span> <span class="k">in</span> <span class="n">touches</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">CGPoint</span> <span class="n">location</span> <span class="o">=</span> <span class="p">[</span><span class="n">touch</span> <span class="nl">locationInView:</span> <span class="p">[</span><span class="n">touch</span> <span class="n">view</span><span class="p">]];</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>  <span class="n">location</span> <span class="o">=</span> <span class="p">[[</span><span class="n">CCDirector</span> <span class="n">sharedDirector</span><span class="p">]</span> <span class="nl">convertToGL:</span> <span class="n">location</span><span class="p">];</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;&lt;/</span><span class="n">li</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">ul</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">//      [self addNewSpriteWithCoords: location];&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>    <span class="k">if</span> <span class="p">(</span><span class="n">mouseJoint</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">world</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">DestroyJoint</span><span class="p">(</span><span class="n">mouseJoint</span><span class="p">);</span>
</span><span class='line'>        <span class="n">mouseJoint</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>五、box2d中的sensor<br />
sensor可以用在我们的人物来到特定的位置触发一些事件，它的创建跟其他刚体的创建一样，只是将b2FixtureDef的isSensor设为true</p>

<p>sensor可以这么创建：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">createSensor</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">CGSize</span> <span class="n">winSize</span> <span class="o">=</span> <span class="p">[[</span><span class="n">CCDirector</span> <span class="n">sharedDirector</span><span class="p">]</span> <span class="n">winSize</span><span class="p">];</span>
</span><span class='line'><span class="n">CGSize</span> <span class="n">sensorSize</span> <span class="o">=</span> <span class="n">CGSizeMake</span><span class="p">(</span><span class="mi">100</span><span class="p">,</span> <span class="mi">50</span><span class="p">);</span>
</span><span class='line'><span class="n">b2BodyDef</span> <span class="n">bodyDef</span><span class="p">;</span>
</span><span class='line'><span class="n">bodyDef</span><span class="p">.</span><span class="n">type</span> <span class="o">=</span> <span class="n">b2_staticBody</span><span class="p">;</span>
</span><span class='line'><span class="n">bodyDef</span><span class="p">.</span><span class="n">position</span> <span class="o">=</span> <span class="n">b2Vec2</span><span class="p">((</span><span class="n">winSize</span><span class="p">.</span><span class="n">width</span><span class="o">-</span><span class="n">sensorSize</span><span class="p">.</span><span class="n">width</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span><span class="o">/</span><span class="n">PTM_RATIO</span><span class="p">,</span>
</span><span class='line'>                          <span class="p">(</span><span class="n">sensorSize</span><span class="p">.</span><span class="n">height</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span><span class="o">/</span><span class="n">PTM_RATIO</span><span class="p">);</span>
</span><span class='line'><span class="n">sensorBody</span> <span class="o">=</span> <span class="n">world</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">CreateBody</span><span class="p">(</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">bodyDef</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">b2PolygonShape</span> <span class="n">shape</span><span class="p">;</span>
</span><span class='line'><span class="n">shape</span><span class="p">.</span><span class="n">SetAsBox</span><span class="p">(</span><span class="n">sensorSize</span><span class="p">.</span><span class="n">width</span> <span class="o">/</span> <span class="n">PTM_RATIO</span><span class="p">,</span> <span class="n">sensorSize</span><span class="p">.</span><span class="n">height</span> <span class="o">/</span> <span class="n">PTM_RATIO</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">b2FixtureDef</span> <span class="n">fixtureDef</span><span class="p">;</span>
</span><span class='line'><span class="n">fixtureDef</span><span class="p">.</span><span class="n">shape</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">shape</span><span class="p">;</span>
</span><span class='line'><span class="n">fixtureDef</span><span class="p">.</span><span class="n">isSensor</span> <span class="o">=</span> <span class="n">true</span><span class="p">;</span>
</span><span class='line'><span class="n">sensorBody</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">CreateFixture</span><span class="p">(</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">fixtureDef</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>运行后，绿色区域就是我们的sensor：
<img src="/images/blog/1343832334_6742.png" title="sensor" alt="Alt text" /></p>

<p>我们可以看到sensor是可以让刚体穿过的。下面在update里加入如下代码：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">b2ContactEdge</span><span class="o">*</span> <span class="n">edge</span> <span class="o">=</span> <span class="n">sensorBody</span><span class="o">-&gt;</span><span class="n">GetContactList</span><span class="p">();</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">while</span> <span class="p">(</span><span class="n">edge</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">b2Contact</span><span class="o">*</span> <span class="n">contact</span> <span class="o">=</span> <span class="n">edge</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">contact</span><span class="p">;</span>
</span><span class='line'>    <span class="n">b2Fixture</span><span class="o">*</span> <span class="n">fixtureB</span> <span class="o">=</span> <span class="n">contact</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">GetFixtureB</span><span class="p">();</span>
</span><span class='line'>    <span class="n">b2Body</span> <span class="o">*</span><span class="n">bodyB</span> <span class="o">=</span> <span class="n">fixtureB</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">GetBody</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">bodyB</span> <span class="o">!=</span> <span class="n">sensorBody</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">bodyB</span> <span class="o">!=</span> <span class="n">groundBody</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">CCSprite</span> <span class="o">*</span><span class="n">sprite</span> <span class="o">=</span> <span class="p">(</span><span class="n">CCSprite</span> <span class="o">*</span><span class="p">)</span><span class="n">bodyB</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">GetUserData</span><span class="p">();</span>
</span><span class='line'>        <span class="p">[</span><span class="n">sprite</span> <span class="nl">removeFromParentAndCleanup:</span><span class="n">YES</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">world</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">DestroyBody</span><span class="p">(</span><span class="n">bodyB</span><span class="p">);</span>
</span><span class='line'>        <span class="n">bodyB</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">break</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">edge</span> <span class="o">=</span> <span class="n">edge</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">next</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>这时候，我们在sensor上方点击创建出来的物体，掉到sensor上立马就消失了。注意，这里的检测会有一个问题，假如某个物体移动很快，update方法前在sensor这边，第二次update有可能穿出sensor而未被检测到。</p>

<p>六、创建一个不规则的shape<br />
box2d中你可以为一个shape设置多个vertex，这样你就可能生成一个自定义的shape，比如：</p>

<p><img src="/images/blog/1344141723_1283.png" title="shape" alt="Alt text" /></p>

<p>这样，一个自定义的shape就创建好了。创建自定义shape有几点需要注意：<br />
1、顶点的位置是相对于body中心的<br />
2、顶点需要顺时针定义<br />
3、最大顶点数量不能超过8，数量越大，越费内存，性能也越差<br />
4、顶点无法定义一个凹面体（concave）</p>

<p>下图显示了什么是concave和convex：</p>

<p><img src="/images/blog/1344142121_9899.png" title="concave and convex" alt="Alt text" /></p>

<p>有一个小工具用于获取顶点的值，叫vertex helper，下载地址：<a href="https://github.com/jfahrenkrug/VertexHelper">https://github.com/jfahrenkrug/VertexHelper</a><br />
打开小工具后，首先把你的图片拖到vertex helper中，点击edit mode，type选择box2d，style选择initialization，用鼠标在图上点击即可：</p>

<p><img src="/images/blog/1344145342_2179.png" title="vertex helper" alt="Alt text" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cocos2d中的动画、字体、菜单和声音]]></title>
    <link href="http://imrazor.github.io/blog/2014/05/03/cocos2dzhong-de-dong-hua/"/>
    <updated>2014-05-03T17:49:41+08:00</updated>
    <id>http://imrazor.github.io/blog/2014/05/03/cocos2dzhong-de-dong-hua</id>
    <content type="html"><![CDATA[<p>一、Action和Animation。cocos2d提供了格式各样的action和animation</p>

<p>举个例子
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">CCAction</span> <span class="o">*</span><span class="n">moveAction</span> <span class="o">=</span> <span class="p">[</span><span class="n">CCMoveBy</span> <span class="nl">actionWithDuration:</span><span class="mf">2.0f</span> <span class="nl">position:</span><span class="n">ccp</span><span class="p">(</span><span class="mf">200.0f</span><span class="p">,</span><span class="mf">0.0f</span><span class="p">)];</span>
</span><span class='line'><span class="p">[</span><span class="n">vikingSprite</span> <span class="nl">runAction:</span><span class="n">moveAction</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>假如vikingSprite是我们已经建立好的一个精灵，那么这个精灵就会朝着position的位置移动，两秒后就到指定位置了</p>

<p>一般来讲，精灵的跟动画相关的有CCAction，CCAnimation，CCAnimate三个对象。一般都是先创建CCAnimation对象，通过CCAnimation创建CCAnimate，再通过CCAnimate创建CCAction，最后精灵对象run一下这个action对象，动画就跑起来了</p>

<p>比较常用的几个action有CCRepeatForever，一个无限重复的动作。CCSequence队列执行一个动作，CCSpawn同时执行多个动作，这三个类都是CCAction的子类，多个action可以互相嵌套着用</p>

<!--more-->


<p>二、CCLabelTTF或CCLabelBMFont。当我们在游戏中添加文字时，比如分数，金钱之类的，就需要用到CCLabelTTF或CCLabelBMFont了</p>

<p>CCLabelTTF只支持系统的字体，或者你自行添加的ttf字体，用法：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">CCLabelTTF</span> <span class="o">*</span><span class="n">label</span> <span class="o">=</span> <span class="p">[</span><span class="n">CCLabelTTF</span> <span class="nl">labelWithString:</span><span class="err">@</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Hello</span> <span class="n">World</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="nl">fontName:</span><span class="err">@</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Marker</span> <span class="n">Felt</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="nl">fontSize:</span><span class="mi">64</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>CCLabelBMFont是CCSpriteBatchNode的子类，可以理解为一个font atlas，用法</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">CCLabelBMFont</span> <span class="o">*</span><span class="n">gameBeginLabel</span> <span class="o">=</span> <span class="p">[</span><span class="n">CCLabelBMFont</span> <span class="nl">labelWithString:</span><span class="err">@</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Game</span> <span class="n">Start</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="nl">fntFile:</span><span class="err">@</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">SpaceVikingFont</span><span class="p">.</span><span class="n">fnt</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;];</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>因为CCLabelTTF和CCLabelBMFont都是CCNode的子类，所以他们也可以通过runAction：做一些动画效果：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">[</span><span class="n">gameBeginLabel</span> <span class="nl">setPosition:</span><span class="n">ccp</span><span class="p">(</span><span class="n">screenSize</span><span class="p">.</span><span class="n">width</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="n">screenSize</span><span class="p">.</span><span class="n">height</span><span class="o">/</span><span class="mi">2</span><span class="p">)];</span>
</span><span class='line'><span class="p">[</span><span class="n">self</span> <span class="nl">addChild:</span><span class="n">gameBeginLabel</span><span class="p">];</span>
</span><span class='line'><span class="kt">id</span> <span class="n">labelAction</span> <span class="o">=</span> <span class="p">[</span><span class="n">CCSpawn</span> <span class="nl">actions:</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>               <span class="p">[</span><span class="n">CCScaleBy</span> <span class="nl">actionWithDuration:</span><span class="mf">2.0f</span> <span class="nl">scale:</span><span class="mi">4</span><span class="p">],</span>
</span><span class='line'>               <span class="p">[</span><span class="n">CCFadeOut</span> <span class="nl">actionWithDuration:</span><span class="mf">2.0f</span><span class="p">],</span>
</span><span class='line'>             <span class="nb">nil</span><span class="p">];</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">[</span><span class="n">gameBeginLabel</span> <span class="nl">runAction:</span><span class="n">labelAction</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>另外，他们还有anchor point的概念，锚点范围为（0，0）到（1，1）之间，默认是（0.5，0.5），对象在变化的时候会以锚点为基准进行，如果锚点设为（0，0），那么上面放大的动画会朝向右上的位置进行放大</p>

<p>三、CCMenu。游戏中的菜单必不可少，CCMenu正是你想要的。
要创建CCMenu，你必须有CCMenuItem对象，CCMenuItem便是你菜单中的某个选项，可以为图片、文字等
cocos2d为menu item提供了必要的转换方法，比如CCMenuItemLabel你可以通过CCLabelBMFont得到；游戏中某些开关，比如声音开关可以用CCMenuItemToggle对象
每一个CCMenuItem都可以在创建的时候绑定某个对象的方法，当这个CCMenuItem被点击的时候会触发这个方法</p>

<p>四、CocosDenshion。cocos2d中集成了CocosDenshion，不过游戏中我们一般都是整个背景音乐或者来点音效，所以我们只需要用SimpleAudioEngine就可以了。</p>

<p>SimpleAudioEngine其实是对CDAudioManager进行了一些封装，我们暂时不去关注细节实现，先看看怎么使用
这是一段通用的代码，用来确保建立SimpleAudioEngine对象成功</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// Indicate that we are trying to start up the Audio Manager</span>
</span><span class='line'><span class="p">[</span><span class="n">CDSoundEngine</span> <span class="nl">setMixerSampleRate:</span><span class="n">CD_SAMPLE_RATE_MID</span><span class="p">];</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">//Init audio manager asynchronously as it can take a few seconds</span>
</span><span class='line'><span class="c1">//The FXPlusMusicIfNoOtherAudio mode will check if the user is</span>
</span><span class='line'><span class="c1">// playing music and disable background music playback if</span>
</span><span class='line'><span class="c1">// that is the case.</span>
</span><span class='line'><span class="p">[</span><span class="n">CDAudioManager</span> <span class="nl">initAsynchronously:</span><span class="n">kAMM_FxPlusMusicIfNoOtherAudio</span><span class="p">];</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">//Wait for the audio manager to initialise</span>
</span><span class='line'><span class="k">while</span> <span class="p">([</span><span class="n">CDAudioManager</span> <span class="n">sharedManagerState</span><span class="p">]</span> <span class="o">!=</span> <span class="n">kAMStateInitialised</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="p">[</span><span class="n">NSThread</span> <span class="nl">sleepForTimeInterval:</span><span class="mf">0.1</span><span class="p">];</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">//At this point the CocosDenshion should be initialized</span>
</span><span class='line'><span class="c1">// Grab the CDAudioManager and check the state</span>
</span><span class='line'><span class="n">CDAudioManager</span> <span class="o">*</span><span class="n">audioManager</span> <span class="o">=</span> <span class="p">[</span><span class="n">CDAudioManager</span> <span class="n">sharedManager</span><span class="p">];</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">audioManager</span><span class="p">.</span><span class="n">soundEngine</span> <span class="o">==</span> <span class="nb">nil</span> <span class="o">||&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>    <span class="n">audioManager</span><span class="p">.</span><span class="n">soundEngine</span><span class="p">.</span><span class="n">functioning</span> <span class="o">==</span> <span class="n">NO</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="n">CCLOG</span><span class="p">(</span><span class="s">@&quot;CocosDenshion failed to init, no audio will play.&quot;</span><span class="p">);</span>
</span><span class='line'><span class="n">managerSoundState</span> <span class="o">=</span> <span class="n">kAudioManagerFailed</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span> <span class="k">else</span> <span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="p">[</span><span class="n">audioManager</span> <span class="nl">setResignBehavior:</span><span class="n">kAMRBStopPlay</span> <span class="nl">autoHandle:</span><span class="n">YES</span><span class="p">];</span>
</span><span class='line'><span class="n">soundEngine</span> <span class="o">=</span> <span class="p">[</span><span class="n">SimpleAudioEngine</span> <span class="n">sharedEngine</span><span class="p">];</span>
</span><span class='line'><span class="n">managerSoundState</span> <span class="o">=</span> <span class="n">kAudioManagerReady</span><span class="p">;</span>
</span><span class='line'><span class="n">CCLOG</span><span class="p">(</span><span class="s">@&quot;CocosDenshion is Ready&quot;</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>当对象成功创建以后，便可以使用这个对象了，预加载的过程会hang住程序，所以不要在主线程中进行声音的预加载</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">[</span><span class="nl">soundEnginepreloadBackgroundMusic:</span><span class="n">trackFileName</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="nl">soundEngineplayBackgroundMusic:trackFileNameloop:</span><span class="n">YES</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>下面这行代码用于设置采样率，可以在CocosDenshion.h中看到各种采样率的宏定义，可以根据自己的声音文件来设置，注意：当你声音文件低于设置的采样率时，会使用设置的采样率而产生内存的浪费。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">[</span><span class="n">CDSoundEngine</span> <span class="nl">setMixerSampleRate:</span><span class="n">CD_SAMPLE_RATE_MID</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cocos2d中比较重要的类]]></title>
    <link href="http://imrazor.github.io/blog/2014/05/03/cocos2dzhong-bi-jiao-zhong-yao-de-lei/"/>
    <updated>2014-05-03T13:25:52+08:00</updated>
    <id>http://imrazor.github.io/blog/2014/05/03/cocos2dzhong-bi-jiao-zhong-yao-de-lei</id>
    <content type="html"><![CDATA[<p>一、CCDirector，导演，单例，主要负责场景切换，控制OpenGL ES中的一些设置（如投影）。
CCDirector有四种类型：<br />1、CCDirectorTypeNSTimer，如果你的程序中要使用uikit中的对象并且支持ios3.1以前的版本，使用此类型，此类型下可以设置每秒刷新率1～60;<br />2、CCDirectorTypeMainLoop，比上个导演类型稍快，这个类型下使用uikit相关对象效果不好，并且不能自定义刷新率;<br />3、CCDirectorTypeThreadMainLoop，跟上个差不多，这个导演有在一个独立线程中有个timer来控制主线程中的main loop;<br />4、CCDirectorTypeDisplayLink，通过CADisplayLink刷新屏幕，这个类型下可以使用uikit中的对象，在ios3.1以上的版本才能使用这个类型，刷新率可以定为60，30，15每秒</p>

<p>二、CCNode，一个父类，这个父类中包含了对OpenGL ES的操作，对action的展现等等</p>

<p>三、CCScene，场景，CCNode的子类，同一时间CCDirector只能有一个场景，场景持有屏幕上所有的可见对象，是CCLayer的容器</p>

<!--more-->


<p>四、CCLayer，层，CCNode的子类，可以捕获touch和accelerometer事件，是CCSprite或其他可视游戏对象的容器</p>

<p>五、CCSprite，精灵，CCNode子类，包含一些逻辑和图片的控制，比如你游戏中的敌人，主角，物品等等都是精灵</p>

<p>六、CCSpriteBatchNode，CCNode子类，以前的版本叫sprite sheet，使用CCSpriteBatchNode有诸多好处:<br />
1、减少OpenGL ES的bind call，这里简单说下图片的载入。当一张图片要显示时，首先它会被转为texture，之后装入内存，因为GPU大多认识解压后的图片（png是压缩格式的图片，GPU也可以处理一些压缩格式的，比如PVRTC），然后通过OpenGL ES把这张图片画到屏幕上，当一个场景载入大量图片时，势必会多次调用OpenGL ES，这样GPU都压力就会很大，帧数就掉下来了。使用CCSpriteBatchNode可以一次性的把当前场景所有的图片都载入进来，从而减少大量GPU的运算，帧数自然就高了;<br />
2、减少内存占用，其实这一点现在已经不是最重要的了，因为3gs以后的设备都支持NPOT（NON POWER OF TWO）了。老GPU保存texture的时候只能存为power-of-two的大小，也就是你都图片是50x50像素的，最后在内存中最后就变为64x64的了，那么64 * 64 &ndash; 50 * 50这么大块的内存相当于浪费掉了（实际上，CPU和GPU操作图片内存地址不是一个，所以当GPU操作图片的时候，这个图片还要被考到GPU能操作的内存区域，所以那部分浪费都内存还会再被拷贝一便）。而使用texture atlas就没必要担心这个了，texture atlas让你把一个一个的图片放到一起，然后一次性载入内存，这样那些每张图片都浪费一点的内存就会大大减少了。不过从cocos2d1.1以后，默认只要设备支持NPOT，就会自动开启NPOT<br /></p>
]]></content>
  </entry>
  
</feed>
